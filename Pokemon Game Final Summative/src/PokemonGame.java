/* Jack Bai
07/26/2017
Pokemon Matching Game
A fun and interactive graphical matching game that uses Pokemon.
*/ 
import java.awt.FlowLayout;
import javax.swing.JLabel;


/**
 *
 * @author jack
 */
public class PokemonGame extends javax.swing.JFrame {
    String [] pokemonRoster = new String [6];
    String [] rivalPokemon = new String [6];
    int i = 0;
    int numberOfPokemonCounter = 0;
    String displayMessage = "";
    int battles = 0;
    int score [] = new int [3];
    /**
     * Creates new form PokemonGame
     */
    public PokemonGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        howToPlayJFrame = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        howToPlayTextArea = new javax.swing.JTextArea();
        howToPlayTitle = new javax.swing.JLabel();
        htpCharmanderLabel = new javax.swing.JLabel();
        htpBulbasaurLabel = new javax.swing.JLabel();
        htpSquirtleLabel = new javax.swing.JLabel();
        pokemonSelectionFrame = new javax.swing.JFrame();
        selectingPokemonNumber = new javax.swing.JTextField();
        bulbasaurLabel = new javax.swing.JLabel();
        charmanderLabel = new javax.swing.JLabel();
        squirtleLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        currentRoster = new javax.swing.JTextArea();
        choosingBulbasaur = new javax.swing.JButton();
        choosingCharmander = new javax.swing.JButton();
        choosingSquirtle = new javax.swing.JButton();
        battleScreen = new javax.swing.JFrame();
        doneChoosingFrame = new javax.swing.JFrame();
        doneSelectionLabel = new javax.swing.JLabel();
        battleButton = new javax.swing.JButton();
        pokemonBattleVsRival = new javax.swing.JFrame();
        userPokemonLabel = new javax.swing.JLabel();
        rivalPokemonLabel = new javax.swing.JLabel();
        displayPokemonBattleButton = new javax.swing.JButton();
        pokemonBackgroundBatteLabel = new javax.swing.JLabel();
        endOfBattleDisplay = new javax.swing.JFrame();
        endOfBattleText = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        battleTextArea = new javax.swing.JTextArea();
        resetButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        mainScreenBannerLabel = new javax.swing.JLabel();
        mainScreenTitle = new javax.swing.JLabel();
        howToPlayButton = new javax.swing.JButton();
        playLabel = new javax.swing.JLabel();
        howToPlayLabel = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();

        howToPlayJFrame.setMinimumSize(new java.awt.Dimension(1353, 743));

        howToPlayTextArea.setEditable(false);
        howToPlayTextArea.setColumns(20);
        howToPlayTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        howToPlayTextArea.setRows(5);
        howToPlayTextArea.setText("Hello!\n\nHere you will be able to learn how to play the Pokemon Matching Game!\nThe rules are simple, there are 3 possible Pokemon to pick from,\nBulbasaur,Squirtle, or Charmander. Bulbasaur beats Squirtle but loses\nto Charmander, Squirtle beats Charmander but loses to Bulbasaur\nand lastly, Charmander beats Bulbsaur but loses to Squirtle.\nYou will select which Pokemon you would like to use and they will\nbattle in that order. Your opponent will have 6 Pokemon as well. \nOnce you are ready, you and your opponent will reveal which\npokemon you have selected. If you have 3 or more Pokemon that have \nbeaten the opponents, you win! If not, try again! \nHope you enjoy this game! :D");
        jScrollPane2.setViewportView(howToPlayTextArea);

        howToPlayTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/howToPlayLabel.png"))); // NOI18N

        htpCharmanderLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/howToPlayCharmander.png"))); // NOI18N
        htpCharmanderLabel.setToolTipText("Charmander\n");

        htpBulbasaurLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/howToPlayBulbasaur.png"))); // NOI18N
        htpBulbasaurLabel.setToolTipText("Bulbasaur\n");

        htpSquirtleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/howToPlaySquirtle.png"))); // NOI18N
        htpSquirtleLabel.setToolTipText("Squirtle\n");

        javax.swing.GroupLayout howToPlayJFrameLayout = new javax.swing.GroupLayout(howToPlayJFrame.getContentPane());
        howToPlayJFrame.getContentPane().setLayout(howToPlayJFrameLayout);
        howToPlayJFrameLayout.setHorizontalGroup(
            howToPlayJFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                .addGroup(howToPlayJFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(howToPlayTitle))
                    .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(howToPlayJFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(htpBulbasaurLabel))
                            .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(htpCharmanderLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                                .addComponent(htpSquirtleLabel)))))
                .addGap(78, 78, 78))
        );
        howToPlayJFrameLayout.setVerticalGroup(
            howToPlayJFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(howToPlayTitle)
                .addGroup(howToPlayJFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(howToPlayJFrameLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(htpBulbasaurLabel)
                        .addGap(105, 105, 105)
                        .addGroup(howToPlayJFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(htpCharmanderLabel)
                            .addComponent(htpSquirtleLabel))))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pokemonSelectionFrame.setMinimumSize(new java.awt.Dimension(600, 600));

        selectingPokemonNumber.setEditable(false);

        bulbasaurLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bulbasaurLabel.setText("Bulbasaur");

        charmanderLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        charmanderLabel.setText("Charmander");

        squirtleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        squirtleLabel.setText("Squirtle");

        currentRoster.setEditable(false);
        currentRoster.setColumns(20);
        currentRoster.setRows(5);
        jScrollPane3.setViewportView(currentRoster);

        choosingBulbasaur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bulbasaur.png"))); // NOI18N
        choosingBulbasaur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosingBulbasaurActionPerformed(evt);
            }
        });

        choosingCharmander.setIcon(new javax.swing.ImageIcon(getClass().getResource("/charmander.png"))); // NOI18N
        choosingCharmander.setMaximumSize(new java.awt.Dimension(125, 125));
        choosingCharmander.setMinimumSize(new java.awt.Dimension(125, 125));
        choosingCharmander.setPreferredSize(new java.awt.Dimension(125, 125));
        choosingCharmander.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosingCharmanderActionPerformed(evt);
            }
        });

        choosingSquirtle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squirtle.jpg"))); // NOI18N
        choosingSquirtle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choosingSquirtleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pokemonSelectionFrameLayout = new javax.swing.GroupLayout(pokemonSelectionFrame.getContentPane());
        pokemonSelectionFrame.getContentPane().setLayout(pokemonSelectionFrameLayout);
        pokemonSelectionFrameLayout.setHorizontalGroup(
            pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                .addGroup(pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(selectingPokemonNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                                .addComponent(choosingBulbasaur, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(choosingCharmander, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(choosingSquirtle, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                        .addComponent(bulbasaurLabel)
                        .addGap(111, 111, 111)
                        .addComponent(charmanderLabel)
                        .addGap(103, 103, 103)
                        .addComponent(squirtleLabel)
                        .addGap(33, 33, 33)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pokemonSelectionFrameLayout.setVerticalGroup(
            pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pokemonSelectionFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectingPokemonNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choosingCharmander, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choosingSquirtle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choosingBulbasaur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(pokemonSelectionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charmanderLabel)
                    .addComponent(bulbasaurLabel)
                    .addComponent(squirtleLabel))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );

        javax.swing.GroupLayout battleScreenLayout = new javax.swing.GroupLayout(battleScreen.getContentPane());
        battleScreen.getContentPane().setLayout(battleScreenLayout);
        battleScreenLayout.setHorizontalGroup(
            battleScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 594, Short.MAX_VALUE)
        );
        battleScreenLayout.setVerticalGroup(
            battleScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );

        doneChoosingFrame.setAutoRequestFocus(false);
        doneChoosingFrame.setMinimumSize(new java.awt.Dimension(390, 277));

        doneSelectionLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        doneSelectionLabel.setText("You are done selecting Pokemon!");

        battleButton.setText("Battle!");
        battleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                battleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout doneChoosingFrameLayout = new javax.swing.GroupLayout(doneChoosingFrame.getContentPane());
        doneChoosingFrame.getContentPane().setLayout(doneChoosingFrameLayout);
        doneChoosingFrameLayout.setHorizontalGroup(
            doneChoosingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doneChoosingFrameLayout.createSequentialGroup()
                .addGroup(doneChoosingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doneChoosingFrameLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(doneSelectionLabel))
                    .addGroup(doneChoosingFrameLayout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(battleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        doneChoosingFrameLayout.setVerticalGroup(
            doneChoosingFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doneChoosingFrameLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(doneSelectionLabel)
                .addGap(66, 66, 66)
                .addComponent(battleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pokemonBattleVsRival.setMinimumSize(new java.awt.Dimension(1140, 714));
        pokemonBattleVsRival.getContentPane().setLayout(null);

        userPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokeballImage.png"))); // NOI18N
        pokemonBattleVsRival.getContentPane().add(userPokemonLabel);
        userPokemonLabel.setBounds(210, 520, 190, 150);

        rivalPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokeballImage.png"))); // NOI18N
        pokemonBattleVsRival.getContentPane().add(rivalPokemonLabel);
        rivalPokemonLabel.setBounds(810, 290, 170, 150);

        displayPokemonBattleButton.setText("Battle!");
        displayPokemonBattleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayPokemonBattleButtonActionPerformed(evt);
            }
        });
        pokemonBattleVsRival.getContentPane().add(displayPokemonBattleButton);
        displayPokemonBattleButton.setBounds(510, 440, 130, 23);

        pokemonBackgroundBatteLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokemonBattleFieldTesting.png"))); // NOI18N
        pokemonBattleVsRival.getContentPane().add(pokemonBackgroundBatteLabel);
        pokemonBackgroundBatteLabel.setBounds(0, 0, 1120, 700);

        endOfBattleDisplay.setMinimumSize(new java.awt.Dimension(900, 800));

        endOfBattleText.setFont(new java.awt.Font("Trebuchet MS", 0, 48)); // NOI18N
        endOfBattleText.setText("End of Battle Results");

        battleTextArea.setEditable(false);
        battleTextArea.setColumns(20);
        battleTextArea.setFont(new java.awt.Font("Nyala", 1, 18)); // NOI18N
        battleTextArea.setRows(5);
        jScrollPane4.setViewportView(battleTextArea);

        resetButton.setText("Try Again?");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout endOfBattleDisplayLayout = new javax.swing.GroupLayout(endOfBattleDisplay.getContentPane());
        endOfBattleDisplay.getContentPane().setLayout(endOfBattleDisplayLayout);
        endOfBattleDisplayLayout.setHorizontalGroup(
            endOfBattleDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, endOfBattleDisplayLayout.createSequentialGroup()
                .addGap(0, 97, Short.MAX_VALUE)
                .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
            .addGroup(endOfBattleDisplayLayout.createSequentialGroup()
                .addGroup(endOfBattleDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(endOfBattleDisplayLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(endOfBattleText))
                    .addGroup(endOfBattleDisplayLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(endOfBattleDisplayLayout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        endOfBattleDisplayLayout.setVerticalGroup(
            endOfBattleDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(endOfBattleDisplayLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(endOfBattleText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainScreenBannerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokemonBanner.jpg"))); // NOI18N

        mainScreenTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokemonTitleText.png"))); // NOI18N

        howToPlayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/howToPlayButtonImage.jpg"))); // NOI18N
        howToPlayButton.setText("jButton2");
        howToPlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howToPlayButtonActionPerformed(evt);
            }
        });

        playLabel.setFont(new java.awt.Font("Batang", 0, 24)); // NOI18N
        playLabel.setForeground(new java.awt.Color(0, 255, 0));
        playLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playGameButtonLabel.png"))); // NOI18N
        playLabel.setLabelFor(playButton);

        howToPlayLabel.setFont(new java.awt.Font("Batang", 1, 24)); // NOI18N
        howToPlayLabel.setForeground(new java.awt.Color(102, 255, 51));
        howToPlayLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/howToPlayButtonLabel.png"))); // NOI18N
        howToPlayLabel.setLabelFor(howToPlayButton);

        playButton.setBackground(new java.awt.Color(51, 153, 255));
        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/playButtonImage.jpg"))); // NOI18N
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(mainScreenTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(playLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainScreenBannerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(howToPlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(howToPlayLabel)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainScreenTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mainScreenBannerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(playLabel)))
                        .addGap(65, 65, 65))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(howToPlayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(howToPlayLabel)
                        .addGap(30, 30, 30))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Requires the user to hit the how to play button on the main screen
    private void howToPlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howToPlayButtonActionPerformed

        howToPlayJFrame.setVisible(true);   
        // Prints a JFrame that desribes how to play the game 
    }//GEN-LAST:event_howToPlayButtonActionPerformed
    // Prompts the user to begin choosing Pokemon for battle
    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        //Gets the main screen and resets it
        getContentPane().removeAll();        
        revalidate();
        repaint();
        //Sets FlowLayout making it easy to display a simple background from the package
        FlowLayout flow = new FlowLayout();
        setLayout(flow);
        JLabel backgroundPicture = new JLabel();
        backgroundPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokemonSelect2.png")));
        add(backgroundPicture);
        setVisible(true);
        //Create the Jframe that promts the user on each pokemon selection until they have selected 6 Pokemon      
        pokemonSelectionFrame.setVisible(true);       
        selectingPokemonNumber.setText("You are currently selecting Pokemon #1");
        currentRoster.setText("Please choose some Pokemon to battle! ");

    }//GEN-LAST:event_playButtonActionPerformed
    // The button that recieves a Bulbasaur selection and puts it through the roster method array 
    private void choosingBulbasaurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosingBulbasaurActionPerformed
        pokemonSelectionRoster("Bulbasaur");
    }//GEN-LAST:event_choosingBulbasaurActionPerformed
    // The button that recieves a Charmander selection and puts it through the roster method array
    private void choosingCharmanderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosingCharmanderActionPerformed
        pokemonSelectionRoster("Charmander");
    }//GEN-LAST:event_choosingCharmanderActionPerformed
    // The button that recieves a Squirtle selection and puts it through the roster method array
    private void choosingSquirtleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choosingSquirtleActionPerformed
        pokemonSelectionRoster("Squirtle");
    }//GEN-LAST:event_choosingSquirtleActionPerformed
            // Sets the main screen to a battle background and outputs the battling screen with each persons pokemon and using other methods for battling explained below
    private void battleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_battleButtonActionPerformed
            // Closes the Pokemon selection
            doneChoosingFrame.setVisible(false);
            //Changes the background
            getContentPane().removeAll();        
            revalidate();
            repaint();
            FlowLayout flow = new FlowLayout();
            setLayout(flow);
            JLabel battlefield = new JLabel();
            battlefield.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pokemonVsBanner.png")));
            add(battlefield);
            setVisible(true);
            //Prints out the battling background and allows the user to complete the battle by pressing the battle button until 6 Pokemon have battled
            pokemonBattleVsRival.setVisible(true);            
            pokemonOpponentGenerator();
            pokemonBattleFunction(pokemonRoster,rivalPokemon);   
        
   
    }//GEN-LAST:event_battleButtonActionPerformed
        //Handles the display of the pokemon during the battles by using if conditionals and setting the JLabel to different images
    private void displayPokemonBattleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayPokemonBattleButtonActionPerformed
        //Uses the try catch method to continue until the code runs past the array and causes an error, or in other words the battles have all finished
        try {    
            if(pokemonRoster[battles].equals("Bulbasaur")){
                userPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bulbasaurBack.png")));
            }
            if(pokemonRoster[battles].equals("Squirtle")){
                userPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squirtleBack.png")));
            }
            if(pokemonRoster[battles].equals("Charmander")){
                userPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/charmanderBack.png")));
            }
            if(rivalPokemon[battles].equals("Bulbasaur")){
                rivalPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bulbasaurFront.png")));
            }
            if(rivalPokemon[battles].equals("Squirtle")){
                rivalPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/squirtleFront.png")));
            }  
            if(rivalPokemon[battles].equals("Charmander")){
                rivalPokemonLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/charmanderFront.png")));
            }
            battles++;
        }
     //Once the battling is complete, display the proper outcome of the previous battles
     catch (Exception err){
            pokemonBattleVsRival.setVisible(false);
            endOfBattleDisplay.setVisible(true);
            if (score[0]>score[2]){
                resultLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/winningImage.png")));
                battleTextArea.setText("You have won "+ score[0] +" round(s) tied "+score[1] + " round(s)  and lost " + score[2]+ " round(s)." + "\nCongratulations, You won!" );
            }
            if (score[2]>score[0]){
                resultLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lostImage.png")));
                battleTextArea.setText("You have won "+ score[0] +" round(s) tied "+score[1] + " round(s)  and lost " + score[2]+ " round(s)." + "\nIt was a good battle, but this time you did not win." );
            }
            if(score[0]==score[2]){
                resultLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tieImage.jpg")));
                battleTextArea.setText("You have won "+ score[0] +" round(s) tied "+score[1] + " round(s)  and lost " + score[2]+ " round(s)." + "\nIt was a tie! Everyone wins!" );
            }
        }
        
         
        
    }//GEN-LAST:event_displayPokemonBattleButtonActionPerformed
    //A reset function that closes the current mainscreen and restarts the program
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
       // Closes the main screen
       getContentPane().removeAll();
       setVisible(false);
       //Opens the game again and closes the end of battle results screen
       new PokemonGame().setVisible(true);
       endOfBattleDisplay.setVisible(false);
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PokemonGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PokemonGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PokemonGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PokemonGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PokemonGame().setVisible(true);
            }
        });
    }
    // Appends the input from the user from the Pokemon selection screen to a public array and prints the inputted value on the screen so the user knows what they have chosen. 
    public String [] pokemonSelectionRoster(String pokemon) {              
           //Adds which pokemon they have selected and increments through the array
            pokemonSelectionFrame.setVisible(true);
            if (pokemon.equals("Bulbasaur")) {
                pokemonRoster[i] = "Bulbasaur";                
            }
            if (pokemon.equals("Charmander")) {
                pokemonRoster[i] = "Charmander";
            }
            if (pokemon.equals("Squirtle")) {
                pokemonRoster[i] = "Squirtle";
            }
            i++;
            //Checks if a final pokemon was entered in the final index to complete the selection
            if (pokemonRoster[5] == "Bulbasaur" || pokemonRoster[5] == "Charmander" || pokemonRoster[5] == "Squirtle"){
            pokemonSelectionFrame.setVisible(false);
            doneChoosingFrame.setVisible(true); 
            }
        //Updates to the user by concatenating strings onto the text area of what they have selected
        selectingPokemonNumber.setText("You are currently selecting Pokemon #" +(i+1) );
        displayMessage = displayMessage + "\n" + pokemon;
        currentRoster.setText("Your current Roster of Pokemon consists of: " + displayMessage);        
        return pokemonRoster;
        
    }
    // Uses math functions to radnomly generate integers that are converted to corresponding strings for the rivals Pokemon
    public String [] pokemonOpponentGenerator(){        
        int randomPokemon;
        for (int x = 0; x < 6;){        
            randomPokemon = Math.round((int)(Math.random()*3));
            if (randomPokemon == 0){
            rivalPokemon[x]= "Bulbasaur";    
            }
            if (randomPokemon == 1){
            rivalPokemon[x]= "Squirtle";    
            }
            if (randomPokemon == 2){
            rivalPokemon[x]= "Charmander";    
            }
            x++;
        }
        return rivalPokemon;
    // Returns a list of strings that are the rivals Pokemon    
    }
    //Handles the actual results of the battling by comparing each string index from the user inputted array with the randomly generated array
    public int [] pokemonBattleFunction(String [] user, String [] rival){       
        int userWins = 0;
        int tie = 0;
        int rivalWins = 0;
        for (int y = 0; y <6;){
              if (user[y].equals("Bulbasaur") && rival[y].equals("Bulbasaur")){
              tie++;
              }
              if (user[y].equals("Bulbasaur") && rival[y].equals("Squirtle")){
              userWins++;    
              }
              if (user[y].equals("Bulbasaur") && rival[y].equals("Charmander")){
              rivalWins++;    
              } 
              if (user[y].equals("Squirtle") && rival[y].equals("Bulbasaur")){
              rivalWins++;    
              }
              if (user[y].equals("Squirtle") && rival[y].equals("Squirtle")){
              tie++;    
              }
              if (user[y].equals("Squirtle") && rival[y].equals("Charmander")){
              userWins++;                  
              }
              if (user[y].equals("Charmander") && rival[y].equals("Bulbasaur")){
              userWins++;    
              }
              if (user[y].equals("Charmander") && rival[y].equals("Squirtle")){
              rivalWins++;    
              }
              if (user[y].equals("Charmander") && rival[y].equals("Charmander")){
              tie++;    
              }
              y++;

          }
        score[0] = userWins;
        score[1] = tie;
        score[2] = rivalWins;
        return score;
    }
    //Returns the amount of wins, ties, and loses by returning an array of integers

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton battleButton;
    private javax.swing.JFrame battleScreen;
    private javax.swing.JTextArea battleTextArea;
    private javax.swing.JLabel bulbasaurLabel;
    private javax.swing.JLabel charmanderLabel;
    private javax.swing.JButton choosingBulbasaur;
    private javax.swing.JButton choosingCharmander;
    private javax.swing.JButton choosingSquirtle;
    private javax.swing.JTextArea currentRoster;
    private javax.swing.JButton displayPokemonBattleButton;
    private javax.swing.JFrame doneChoosingFrame;
    private javax.swing.JLabel doneSelectionLabel;
    private javax.swing.JFrame endOfBattleDisplay;
    private javax.swing.JLabel endOfBattleText;
    private javax.swing.JButton howToPlayButton;
    private javax.swing.JFrame howToPlayJFrame;
    private javax.swing.JLabel howToPlayLabel;
    private javax.swing.JTextArea howToPlayTextArea;
    private javax.swing.JLabel howToPlayTitle;
    private javax.swing.JLabel htpBulbasaurLabel;
    private javax.swing.JLabel htpCharmanderLabel;
    private javax.swing.JLabel htpSquirtleLabel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel mainScreenBannerLabel;
    private javax.swing.JLabel mainScreenTitle;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel playLabel;
    private javax.swing.JLabel pokemonBackgroundBatteLabel;
    private javax.swing.JFrame pokemonBattleVsRival;
    private javax.swing.JFrame pokemonSelectionFrame;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JLabel rivalPokemonLabel;
    private javax.swing.JTextField selectingPokemonNumber;
    private javax.swing.JLabel squirtleLabel;
    private javax.swing.JLabel userPokemonLabel;
    // End of variables declaration//GEN-END:variables

}
